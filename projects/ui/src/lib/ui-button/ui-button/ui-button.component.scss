:host {
  background: var(--background);
  background-image: none;
  border: 1px solid;
  border-color: var(--borderColor);
  border-radius: var(--borderRadius);
  box-sizing: border-box;
  color: var(--color);
  cursor: pointer;
  display: inline-flex;
  font-weight: 400;
  line-height: 1.42857;
  margin-bottom: 0;
  position: relative;
  outline: none;
  text-align: center;
  text-decoration: none;
  transition-duration: var(--transition);
  transition-property: background, box-shadow;
  user-select: none;
  vertical-align: top;
  white-space: nowrap;

  .content {
    line-height: 1.5;
  }
  .icon + .content:not(:empty) {
    padding-left: var(--grid);
  }

  &:hover {
    background: var(--hoverBackground);
    box-shadow: var(--shadow);
    border-color: var(--hoverBorderColor);
    color: var(--color);
  }

  &:active, &.checked {
    background: var(--activeBackground);
    border-color: var(--activeBorderColor);
    color: var(--color);
  }

  &:disabled {
    opacity: .5;
    cursor: not-allowed;
  }

  &:focus {
    box-shadow: var(--focusBoxShadow);
  }

  &.color {
    &-default {
      --background: none;
      --color: var(--primaryColor);
      --borderColor: var(--primaryColor);
      --hoverBorderColor: var(--primaryHoverColor);
      --activeBorderColor: var(--primaryActiveColor);
      --focusBoxShadow: var(--shadow), var(--primaryColor) 0 0 0 1px;
    }
    &-primary {
      --background: var(--primaryColor);
      --color: var(--primaryTextColor);
      --borderColor: var(--primaryColor);
      --hoverBackground: var(--primaryHoverColor);
      --hoverBorderColor: var(--primaryHoverColor);
      --activeBackground: var(--primaryActiveColor);
      --activeBorderColor: var(--primaryActiveColor);
      --focusBoxShadow: var(--shadow), var(--primaryLightColor) 0 0 0 2px inset;
    }
    &-error {
      --background: var(--errorColor);
      --color: var(--errorTextColor);
      --borderColor: var(--errorColor);
      --hoverBackground: var(--errorHoverColor);
      --hoverBorderColor: var(--errorHoverColor);
      --activeBackground: var(--errorActiveColor);
      --activeBorderColor: var(--errorActiveColor);
      --focusBoxShadow: var(--shadow), var(--errorLightColor) 0 0 0 2px inset;
    }
    &-success {
      --background: var(--successColor);
      --color: var(--successTextColor);
      --borderColor: var(--successColor);
      --hoverBackground: var(--successHoverColor);
      --hoverBorderColor: var(--successHoverColor);
      --activeBackground: var(--successActiveColor);
      --activeBorderColor: var(--successActiveColor);
      --focusBoxShadow: var(--shadow), var(--successLightColor) 0 0 0 2px inset;
    }
    &-warning {
      --background: var(--warningColor);
      --color: var(--warningTextColor);
      --borderColor: var(--warningColor);
      --hoverBackground: var(--warningHoverColor);
      --hoverBorderColor: var(--warningHoverColor);
      --activeBackground: var(--warningActiveColor);
      --activeBorderColor: var(--warningActiveColor);
      --focusBoxShadow: var(--shadow), var(--warningLightColor) 0 0 0 2px inset;
    }
    &-info {
      --background: var(--infoColor);
      --color: var(--infoTextColor);
      --borderColor: var(--infoColor);
      --hoverBackground: var(--infoHoverColor);
      --hoverBorderColor: var(--infoHoverColor);
      --activeBackground: var(--infoActiveColor);
      --activeBorderColor: var(--infoActiveColor);
      --focusBoxShadow: var(--shadow), var(--infoLightColor) 0 0 0 2px inset;
    }
  }

  &.link {
    background: none;
    color: var(--linkColor);
    border: none;
    &:hover {
      background: none;
      box-shadow: none;
      border: none;
      color: var(--linkHoverColor);
      text-decoration: underline;
      transform: none;
    }
    &:active, &.checked {
      background: none;
      box-shadow: none;
      border: none;
      color: var(--linkActiveColor);
      transform: none;
    }
    &:disabled {
      background: none;
      box-shadow: none;
      border: none;
      color: var(--primaryLightColor);
      pointer-events: none;
      transform: none;
    }
    &:focus {
      box-shadow: var(--primaryColor) 0 0 0 2px;
    }
  }

  &.size {
    &-s {
      font-size: .85rem;
      padding: calc(var(--grid) / 4) calc(var(--grid) / 2);
    }
    &-m {
      font-size: 1rem;
      padding: var(--grid) calc(var(--grid) * 2);
    }
    &-l {
      font-size: 1.15rem;
      padding: calc(var(--grid) * 1.5) calc(var(--grid) * 3);
    }
  }

  &.groupDirection {
    &-row {
      border-radius: 0;
      &:hover {
        transform: none;
      }
      &:first-child {
        border-bottom-left-radius: var(--borderRadius);
        border-top-left-radius: var(--borderRadius);
      }
      &:last-child {
        border-bottom-right-radius: var(--borderRadius);
        border-top-right-radius: var(--borderRadius);
      }
    }
    &-column {
      border-radius: 0;
      &:hover {
        transform: none;
      }
      &:first-child {
        border-top-left-radius: var(--borderRadius);
        border-top-right-radius: var(--borderRadius);
      }
      &:last-child {
        border-bottom-left-radius: var(--borderRadius);
        border-bottom-right-radius: var(--borderRadius);
      }
    }
  }
}
